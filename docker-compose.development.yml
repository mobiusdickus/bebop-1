version: '3'

services:

  server-ctchan:
    build: ./containers/nginx
    container_name: server-ctchan
    volumes:
      - ./containers/nginx/nginx.dev.conf:/etc/nginx/nginx.conf
    networks:
      - frontend
      - backend
    ports:
      - 80:80
      - 3030:3030

  app-ctchan:
    build:
      context: ./containers/app-ctchan
      dockerfile: Dockerfile.dev
    container_name: app-ctchan
    environment:
      NODE_ENV: 'development'
      CHOKIDAR_USEPOLLING: 'true'
    volumes:
      - ./containers/app-ctchan/src:/app/src
      - ./containers/app-ctchan/public:/app/public
    networks:
      - frontend
    expose:
      - 3000

  app-thedaisycabin:
    build:
      context: ./containers/app-thedaisycabin
      dockerfile: Dockerfile.dev
    container_name: app-thedaisycabin
    environment:
      NODE_ENV: 'development'
      CHOKIDAR_USEPOLLING: 'true'
    volumes:
      - ./containers/app-thedaisycabin/src:/app/src
      - ./containers/app-thedaisycabin/public:/app/public
    networks:
      - frontend
    expose:
      - 3000

  api-ctchan:
    build:
      context: ./containers/api-ctchan
      dockerfile: Dockerfile.dev
    container_name: api-ctchan
    environment:
      FLASK_ENV: 'development'
    volumes:
      - ./containers/api-ctchan/src:/srv/src
    networks:
      - backend
    expose:
      - 8080

  db-ctchan:
    image: mongo:latest
    container_name: db-ctchan
    environment:
      MONGO_INITDB_DATABASE: '${MONGO_INITDB_DATABASE}'
      MONGO_INITDB_ROOT_USERNAME: '${MONGO_INITDB_ROOT_USERNAME}'
      MONGO_INITDB_ROOT_PASSWORD: '${MONGO_INITDB_ROOT_PASSWORD}'
    volumes:
      - ./containers/db-ctchan/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
      - ./containers/db-ctchan/mongo-volume:/data/db
    networks:
      - backend
    restart: unless-stopped
    command: mongod --auth


networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge

volumes:
  mongodb:
    driver: local
